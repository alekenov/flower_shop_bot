name: Deploy Docker Container

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      DOCKER_IMAGE: flower-shop-bot
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Supabase Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.supabase.io
          username: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          password: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: registry.supabase.io/dkohweivbdwweyvyvcbc/${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Deploy to Supabase
        run: |
          curl -X POST "https://api.supabase.com/v1/projects/dkohweivbdwweyvyvcbc/services" \
          -H "Authorization: Bearer ${{ secrets.SUPABASE_ACCESS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "flower-shop-bot",
            "type": "container",
            "image": "registry.supabase.io/dkohweivbdwweyvyvcbc/flower-shop-bot:latest",
            "env": {
              "SUPABASE_DB_HOST": "aws-0-eu-central-1.pooler.supabase.com",
              "SUPABASE_DB_PORT": "6543",
              "SUPABASE_DB_NAME": "postgres",
              "SUPABASE_DB_USER": "postgres.dkohweivbdwweyvyvcbc",
              "SUPABASE_DB_PASSWORD": "${{ secrets.SUPABASE_DB_PASSWORD }}"
            },
            "healthcheck": {
              "test": ["CMD", "curl", "-f", "http://localhost:8080/health"],
              "interval": "30s",
              "timeout": "10s",
              "retries": 3
            },
            "restart": "always"
          }'
