name: Deploy Docker Container

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      SUPABASE_URL: https://dkohweivbdwweyvyvcbc.supabase.co
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      DOCKER_IMAGE: flower-shop-bot
      REGISTRY_HOST: api.supabase.com
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Configure Container Registry
        run: |
          echo "const username = process.env.CONTAINER_REGISTRY_USERNAME;" > registry-config.js
          echo "const password = process.env.CONTAINER_REGISTRY_PASSWORD;" >> registry-config.js
          echo "console.log(JSON.stringify({username, password}));" >> registry-config.js
          
          REGISTRY_CREDS=$(node registry-config.js)
          REGISTRY_USERNAME=$(echo $REGISTRY_CREDS | jq -r '.username')
          REGISTRY_PASSWORD=$(echo $REGISTRY_CREDS | jq -r '.password')
          
          echo "::add-mask::$REGISTRY_USERNAME"
          echo "::add-mask::$REGISTRY_PASSWORD"
          
          echo "REGISTRY_USERNAME=$REGISTRY_USERNAME" >> $GITHUB_ENV
          echo "REGISTRY_PASSWORD=$REGISTRY_PASSWORD" >> $GITHUB_ENV
      
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_HOST }}/${{ env.DOCKER_IMAGE }}:latest
          build-args: |
            SUPABASE_URL=${{ env.SUPABASE_URL }}
            SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
            SUPABASE_SERVICE_ROLE=${{ secrets.SUPABASE_SERVICE_ROLE }}
      
      - name: Deploy to Supabase
        run: |
          curl -X POST "${{ env.SUPABASE_URL }}/rest/v1/functions/deploy_container" \
          -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE }}" \
          -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "flower-shop-bot",
            "container": {
              "image": "${{ env.REGISTRY_HOST }}/${{ env.DOCKER_IMAGE }}:latest",
              "env": {
                "SUPABASE_URL": "${{ env.SUPABASE_URL }}",
                "SUPABASE_SERVICE_ROLE": "${{ secrets.SUPABASE_SERVICE_ROLE }}",
                "SUPABASE_ANON_KEY": "${{ secrets.SUPABASE_ANON_KEY }}",
                "SUPABASE_DB_HOST": "aws-0-eu-central-1.pooler.supabase.com",
                "SUPABASE_DB_PORT": "6543",
                "SUPABASE_DB_NAME": "postgres",
                "SUPABASE_DB_USER": "postgres.dkohweivbdwweyvyvcbc",
                "SUPABASE_DB_PASSWORD": "${{ secrets.SUPABASE_DB_PASSWORD }}"
              },
              "healthcheck": {
                "test": ["CMD", "curl", "-f", "http://localhost:8080/health"],
                "interval": "30s",
                "timeout": "10s",
                "retries": 3
              }
            },
            "restart_policy": "always"
          }'
