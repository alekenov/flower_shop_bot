import logging
from telegram import Update
from telegram.ext import ContextTypes
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from src.services.sheets_service import SheetsService
from src.services.openai_service import OpenAIService
from src.services.docs_service import DocsService

logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
sheets_service = SheetsService()
openai_service = OpenAIService()
docs_service = DocsService()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_message = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ü–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω!\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç—ã –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–∫–µ—Ç. "
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
        "- –ö–∞–∫–∏–µ —Ü–≤–µ—Ç—ã –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏?\n"
        "- –°–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç —Ä–æ–∑—ã?\n"
        "- –•–æ—á—É –∫—É–ø–∏—Ç—å –±—É–∫–µ—Ç –∏–∑ –ø–∏–æ–Ω–æ–≤\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help"
    )
    await update.message.reply_text(welcome_message)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üå∏ –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º:\n\n"
        "- –£–∑–Ω–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω—ã –Ω–∞ —Ü–≤–µ—Ç—ã\n"
        "- –ü–æ–¥–æ–±—Ä–∞—Ç—å –±—É–∫–µ—Ç\n"
        "- –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–≤–µ—Ç–∞—Ö\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!"
    )
    await update.message.reply_text(help_text)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
        inventory = await sheets_service.get_inventory_data()
        inventory_info = sheets_service.format_inventory_for_openai(inventory)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenAI
        response = await openai_service.get_response(update.message.text, inventory_info)
        
        # –§—Ä–∞–∑—ã, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –±–æ—Ç –Ω–µ —É–≤–µ—Ä–µ–Ω –∏–ª–∏ –¥–∞–µ—Ç –æ–±—â–∏–π –æ—Ç–≤–µ—Ç
        uncertain_phrases = [
            "–∏–∑–≤–∏–Ω–∏—Ç–µ",
            "–Ω–µ –º–æ–≥—É",
            "–Ω–µ –∑–Ω–∞—é",
            "–∑–∞—Ç—Ä—É–¥–Ω—è—é—Å—å",
            "–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É",
            "—Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
            "–Ω–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É",
            "—Ö–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å",
            "–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å",
            "–æ—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å",
            "–¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω–∏–º",
            "–º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É",
            "–¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π",
            "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
            "—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è"
        ]
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
        response_type = "–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è"
        if any(phrase in response.lower() for phrase in ["–∏–∑–≤–∏–Ω–∏—Ç–µ", "–Ω–µ –º–æ–≥—É", "–Ω–µ –∑–Ω–∞—é"]):
            response_type = "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞"
        elif any(phrase in response.lower() for phrase in uncertain_phrases):
            response_type = "–ù–µ—Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç"
        
        if any(phrase in response.lower() for phrase in uncertain_phrases):
            try:
                # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ Google Docs
                await docs_service.add_unanswered_question(
                    question=update.message.text,
                    user_id=update.effective_user.id,
                    bot_response=response,
                    response_type=response_type
                )
                logger.info(f"Added question to Google Docs: {update.message.text} (Type: {response_type})")
            except Exception as e:
                logger.error(f"Failed to add question to Google Docs: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(response)
        
    except Exception as e:
        logger.error(f"Error handling message: {e}")
        error_message = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        await update.message.reply_text(error_message)
