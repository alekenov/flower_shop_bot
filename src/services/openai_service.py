import logging
from openai import AsyncOpenAI
import os
import sys
import time
import asyncio
from openai import RateLimitError
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from src.config.config import Config

logger = logging.getLogger(__name__)

class OpenAIService:
    def __init__(self):
        config = Config()
        self.client = AsyncOpenAI(
            api_key=config.OPENAI_API_KEY
        )

    async def get_response(self, user_message: str, inventory_info: str = None):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç OpenAI —Å —É—á–µ—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö"""
        max_retries = 3
        retry_delay = 5  # seconds
        
        for attempt in range(max_retries):
            try:
                system_prompt = """–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫ —Ü–≤–µ—Ç–æ—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º —Å –≤—ã–±–æ—Ä–æ–º —Ü–≤–µ—Ç–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –±—É–∫–µ—Ç–æ–≤.
                
                –í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
                1. –ù–ò–ö–û–ì–î–ê –Ω–µ —É–ø–æ–º–∏–Ω–∞–π —Ü–≤–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
                2. –ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç "–∫–∞–∫–∏–µ —Ü–≤–µ—Ç—ã –µ—Å—Ç—å?", –ø–µ—Ä–µ—á–∏—Å–ª—è–π –¢–û–õ–¨–ö–û —Ç–µ, —á—Ç–æ —É–∫–∞–∑–∞–Ω—ã –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                3. –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –Ω–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω—É —Ü–≤–µ—Ç–æ–≤ –¢–û–õ–¨–ö–û –∏–∑ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
                4. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —Ü–≤–µ—Ç–∞—Ö, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏, –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏ —á—Ç–æ –∏—Ö –Ω–µ—Ç –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —Ç–µ, —á—Ç–æ –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏
                5. –ù–ò–ö–û–ì–î–ê –Ω–µ —É–ø–æ–º–∏–Ω–∞–π —Ü–µ–Ω—ã –≤ —Ä—É–±–ª—è—Ö –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –≤–∞–ª—é—Ç–∞—Ö - –∏—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —Ç–µ–Ω–≥–µ
                6. –ù–ò–ö–û–ì–î–ê –Ω–µ –¥–µ–ª–∞–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤–∞–ª—é—Ç - –≤—Å–µ —Ü–µ–Ω—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã —Å—Ç—Ä–æ–≥–æ –≤ —Ç–µ–Ω–≥–µ –∫–∞–∫ –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                7. –£—á–∏—Ç—ã–≤–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –Ω–∞–ª–∏—á–∏–∏
                8. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É
                9. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è —É–∫—Ä–∞—à–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ üå∏
                
                –ù–∞ –≤–æ–ø—Ä–æ—Å "–∫–∞–∫–∏–µ —Ü–≤–µ—Ç—ã –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏?" –æ—Ç–≤–µ—á–∞–π –°–¢–†–û–ì–û –ø–æ —Ñ–æ—Ä–º–∞—Ç—É:
                "–í –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å: [–ø–µ—Ä–µ—á–∏—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ —Ü–≤–µ—Ç—ã, —á—Ç–æ –µ—Å—Ç—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏ —Ü–µ–Ω–æ–π –≤ —Ç–µ–Ω–≥–µ]"
                
                –ü—Ä–∏–º–µ—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤:
                - –û –Ω–∞–ª–∏—á–∏–∏: "–í –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å: –∫—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã (20 —à—Ç.) –ø–æ 410 —Ç–µ–Ω–≥–µ –∏ –ø–∏–æ–Ω—ã (30 —à—Ç.) –ø–æ 1800 —Ç–µ–Ω–≥–µ üå∏"
                - –ù–∞ –≤–æ–ø—Ä–æ—Å –æ —Ü–µ–Ω–µ: "–ö—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã —Å—Ç–æ—è—Ç 410 —Ç–µ–Ω–≥–µ –∑–∞ —à—Ç—É–∫—É üåπ"
                - –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–∫–∞] —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ù–æ —É –Ω–∞—Å –µ—Å—Ç—å [–ø–µ—Ä–µ—á–∏—Å–ª–∏ –∏–º–µ—é—â–∏–µ—Å—è]"
                """

                if inventory_info:
                    system_prompt += f"\n\n–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö (–û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ü–†–û –≠–¢–ò –¶–í–ï–¢–´):\n{inventory_info}"

                messages = [
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": user_message}
                ]

                response = await self.client.chat.completions.create(
                    model="gpt-3.5-turbo",
                    messages=messages,
                    temperature=0.7,
                    max_tokens=500
                )

                return response.choices[0].message.content

            except RateLimitError as e:
                if attempt < max_retries - 1:
                    logger.warning(f"Rate limit exceeded, retrying in {retry_delay} seconds... (Attempt {attempt + 1}/{max_retries})")
                    await asyncio.sleep(retry_delay)
                    retry_delay *= 2  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                else:
                    logger.error(f"Rate limit exceeded after {max_retries} attempts")
                    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."

            except Exception as e:
                logger.error(f"Error getting OpenAI response: {e}")
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
