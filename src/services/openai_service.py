import logging
from openai import AsyncOpenAI
import os
import sys
import time
import asyncio
from openai import RateLimitError, APIError
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from src.config.config import Config
from src.services.docs_service import DocsService

logger = logging.getLogger(__name__)

class OpenAIService:
    def __init__(self):
        config = Config()
        self.client = AsyncOpenAI(
            api_key=config.OPENAI_API_KEY
        )
        self.docs_service = DocsService()
        # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
        self.models = [
            "gpt-4-turbo-preview",  # –°–∞–º–∞—è –Ω–æ–≤–∞—è –∏ –º–æ—â–Ω–∞—è
            "gpt-4",                # –°—Ç–∞–±–∏–ª—å–Ω–∞—è, –Ω–æ –¥–æ—Ä–æ–∂–µ
            "gpt-3.5-turbo-16k",    # –ë–æ–ª—å—à–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            "gpt-3.5-turbo",        # –ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å
        ]
        self.current_model_index = 3  # –ù–∞—á–∏–Ω–∞–µ–º —Å gpt-3.5-turbo

    async def get_response(self, user_message: str, inventory_info: str = None):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç OpenAI —Å —É—á–µ—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""
        max_retries = 5
        base_retry_delay = 5  # –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
        try:
            knowledge_base = await self.docs_service.get_knowledge_base()
        except Exception as e:
            logger.error(f"Failed to get knowledge base: {e}")
            knowledge_base = ""
        
        for attempt in range(max_retries):
            try:
                system_prompt = """–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Ü–≤–µ—Ç–æ—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ Cvety.kz –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º —Å –≤—ã–±–æ—Ä–æ–º —Ü–≤–µ—Ç–æ–≤, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –±—É–∫–µ—Ç–æ–≤ –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –º–∞–≥–∞–∑–∏–Ω–µ.
                
                –í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
                1. –í—Å–µ–≥–¥–∞ –±—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º üå∏
                2. –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –º–∞–≥–∞–∑–∏–Ω–µ
                3. –î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Ü–≤–µ—Ç–∞—Ö:
                   - –ü—Ä–æ–≤–µ—Ä—è–π –Ω–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω—ã –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
                   - –ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –ø—Ä–æ —Ü–≤–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç - –ø—Ä–µ–¥–ª–æ–∂–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
                4. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞:
                   - –ù–ï –æ—Ç–∫–∞–∑—ã–≤–∞–π —Å—Ä–∞–∑—É
                   - –ü—Ä–µ–¥–ª–æ–∂–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
                   - –ü–æ–∫–∞–∂–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ—á—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
                   - –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –≤–µ–∂–ª–∏–≤–æ –ø—Ä–µ–¥–ª–æ–∂–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
                5. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è üå∏
                
                –ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤:
                
                –ù–∞ –≤–æ–ø—Ä–æ—Å "–ú–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å 100 —Ä–æ–∑?":
                "–ö–æ–Ω–µ—á–Ω–æ! üåπ –ú—ã –º–æ–∂–µ–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥–ª—è –≤–∞—Å –±–æ–ª—å—à–æ–π –∑–∞–∫–∞–∑ —Ä–æ–∑. –î–∞–≤–∞–π—Ç–µ —è —É—Ç–æ—á–Ω—é –¥–µ—Ç–∞–ª–∏:
                - –ö–∞–∫–æ–π —Ü–≤–µ—Ç —Ä–æ–∑ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
                - –ö –∫–∞–∫–æ–π –¥–∞—Ç–µ –Ω—É–∂–Ω—ã —Ü–≤–µ—Ç—ã?
                - –ù—É–∂–Ω–∞ –ª–∏ –æ—Å–æ–±–∞—è —É–ø–∞–∫–æ–≤–∫–∞?
                
                –£ –Ω–∞—Å —Å–µ–π—á–∞—Å –µ—Å—Ç—å –∫—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã –ø–æ 410 —Ç–µ–Ω–≥–µ –∑–∞ —à—Ç—É–∫—É. –î–ª—è –±–æ–ª—å—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –º—ã –º–æ–∂–µ–º –æ–±—Å—É–¥–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è. –•–æ—Ç–∏—Ç–µ, —è –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å?"
                
                –ù–∞ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ –±–∞–∑–µ:
                "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! üå∏ –•–æ—Ç—è —É –Ω–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —ç—Ç–æ–π —É—Å–ª—É–≥–∏, —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–∞–º –ø–æ–¥–æ–π—Ç–∏. –¢–∞–∫–∂–µ —è –º–æ–≥—É —Å–≤—è–∑–∞—Ç—å –≤–∞—Å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è. –ß—Ç–æ –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
                
                –í–ê–ñ–ù–û: 
                - –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
                - –ó–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
                - –ü–æ–∫–∞–∑—ã–≤–∞–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ—á—å –∏ –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ
                """

                messages = [
                    {"role": "system", "content": system_prompt}
                ]

                if knowledge_base:
                    messages.append({
                        "role": "system",
                        "content": f"–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –º–∞–≥–∞–∑–∏–Ω–∞:\n{knowledge_base}"
                    })

                if inventory_info:
                    messages.append({
                        "role": "system",
                        "content": f"–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö:\n{inventory_info}"
                    })

                messages.append({
                    "role": "user",
                    "content": user_message
                })

                current_model = self.models[self.current_model_index]
                
                try:
                    response = await self.client.chat.completions.create(
                        model=current_model,
                        messages=messages,
                        temperature=0.7,
                        max_tokens=500
                    )
                    return response.choices[0].message.content.strip()
                
                except RateLimitError as e:
                    logger.warning(f"Rate limit hit for model {current_model}, trying fallback...")
                    # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –º–æ–¥–µ–ª—å
                    self.current_model_index = (self.current_model_index + 1) % len(self.models)
                    if attempt < max_retries - 1:
                        retry_delay = base_retry_delay * (2 ** attempt)  # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                        logger.info(f"Retrying in {retry_delay} seconds with model {self.models[self.current_model_index]}")
                        await asyncio.sleep(retry_delay)
                        continue
                    raise

                except APIError as e:
                    if "rate_limit_exceeded" in str(e).lower():
                        # –¢–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –¥–ª—è RateLimitError
                        self.current_model_index = (self.current_model_index + 1) % len(self.models)
                        if attempt < max_retries - 1:
                            retry_delay = base_retry_delay * (2 ** attempt)
                            logger.info(f"Retrying in {retry_delay} seconds with model {self.models[self.current_model_index]}")
                            await asyncio.sleep(retry_delay)
                            continue
                    raise
                
            except Exception as e:
                logger.error(f"Error getting OpenAI response: {e}")
                if attempt == max_retries - 1:
                    return ("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. "
                           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –º–∞–≥–∞–∑–∏–Ω–∞, "
                           "–∏ –æ–Ω –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ! üå∏")
                await asyncio.sleep(base_retry_delay * (2 ** attempt))
